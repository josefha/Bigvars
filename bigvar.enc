-- preferodal atchensame / encore case study
-- future cahining.
-- mapreduce framework
-- applyat(5,9,function)


module Bigvar

import Supervisor

trait BasicBigvar[t]
    require var size : int

    def createbigvar(array:[t]) : Bigvar[t]
        new Bigvar[t](array)
    end
end

passive class Bigvar[t] : BasicBigvar[t]
    var size : int
    var numsupr : int
    var supr : [(Supr[t],int,int)]

    def init(array:[t]) : unit
        this.size = |array|
        var suprvisor = new Supr[t](array)
        this.supr = [(suprvisor,0,this.size-1)]
    end

    def printdata() : unit
        for suprinfo <- this.supr do
            var supr = suprinfo.0
            supr.printworkerdata()
        end
    end

    def atindex(index: int) : t
        this.owner(index).atindex(index)
    end

    def owner(index: int) : Supr[t]
        return this.supr(0).0
    end

    def size() : int
        this.size
    end
end
